apiVersion: v1
kind: PersistentVolume
metadata:
  name: wiistock-VAR:INSTANCE_NAME-uploads-pv
spec:
  capacity:
    storage: VAR:UPLOADS_STORAGEGi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: wiistock-VAR:INSTANCE_NAME-nfs
  mountOptions:
    - tcp
    - nfsvers=3
  nfs:
    path: /zpool-127780/VAR:PARTITION_NAME
    server: 10.16.103.99

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wiistock-VAR:INSTANCE_NAME-letsencrypt-pv
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: wiistock-VAR:INSTANCE_NAME-nfs
  mountOptions:
    - tcp
    - nfsvers=3
  nfs:
    path: /zpool-127780/VAR:PARTITION_NAME
    server: 10.16.103.99

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: VAR:INSTANCE_NAME-uploads
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: wiistock-VAR:INSTANCE_NAME-nfs
  resources:
    requests:
      storage: VAR:UPLOADS_STORAGEGi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: VAR:INSTANCE_NAME-letsencrypt
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: wiistock-VAR:INSTANCE_NAME-nfs
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: VAR:INSTANCE_NAME
  labels:
    app: VAR:INSTANCE_NAME
spec:
  replicas: VAR:REPLICAS_COUNT
  selector:
    matchLabels:
      app: VAR:INSTANCE_NAME
  template:
    metadata:
      labels:
        app: VAR:INSTANCE_NAME
    spec:
      volumes:
      - name: letsencrypt
        persistentVolumeClaim:
          claimName: VAR:INSTANCE_NAME-letsencrypt
      - name: project
        emptyDir: {}
      - name: uploads
        persistentVolumeClaim:
          claimName: VAR:INSTANCE_NAME-uploads
      - name: symfony-cache
        emptyDir: {}
      - name: cache
        persistentVolumeClaim:
          claimName: wiistock-cache
      initContainers:
      - name: cloner
        image: alpine/git
        args: ["clone", "--branch=VAR:BRANCH", "--single-branch", "https://github.com/benoitcostewiilog/WiiStock", "/project"]
        volumeMounts:
        - mountPath: /project
          name: project
      - name: initializer
        image: wiilog/symfony-initializer:latest
        command: ["/bootstrap/entrypoint.sh", "--with-migrations", "--with-fixtures", "--with-fos"]
        env:
        - name: DATABASE_HOST
          value: "VAR:DATABASE_HOST"
        - name: DATABASE_PORT
          value: "VAR:DATABASE_PORT"
        - name: DATABASE_USER
          value: "VAR:DATABASE_USER"
        - name: DATABASE_PASSWORD
          value: "VAR:DATABASE_PASS"
        - name: DATABASE_NAME
          value: "VAR:DATABASE_NAME"
        - name: DATABASE_URL
          value: "mysql://VAR:DATABASE_USER:VAR:DATABASE_PASS@VAR:DATABASE_HOST:VAR:DATABASE_PORT/VAR:DATABASE_NAME"
        - name: APP_ENV
          value: "VAR:ENV"
        - name: APP_LOCALE
          value: "VAR:CLIENT"
        - name: APP_CLIENT
          value: "VAR:CLIENT"
        - name: APP_URL
          value: "VAR:URL"
        - name: APP_DASHBOARD_TOKEN
          value: "VAR:DASHBOARD_TOKEN"
        volumeMounts:
        - mountPath: /project
          name: project
        - mountPath: /project/var
          name: symfony-cache
        - mountPath: /cache
          name: cache
      containers:
      - name: wiistock
        image: wiilog/symfony:latest
        command: ["/bootstrap/entrypoint.sh"]
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: DOMAIN
          value: "VAR:DOMAIN"
        - name: DATABASE_URL
          value: "mysql://VAR:DATABASE_USER:VAR:DATABASE_PASS@VAR:DATABASE_HOST:VAR:DATABASE_PORT/VAR:DATABASE_NAME"
        - name: APP_ENV
          value: "VAR:ENV"
        - name: APP_SECRET
          value: "VAR:SECRET"
        - name: APP_LOCALE
          value: "VAR:CLIENT"
        - name: APP_INSTANCE
          value: "VAR:INSTANCE_NAME"
        - name: APP_CLIENT
          value: "VAR:CLIENT"
        - name: APP_URL
          value: "VAR:URL"
        - name: APP_FORBIDDEN_PHONES
          value: "VAR:FORBIDDEN_PHONES"
        - name: APP_DASHBOARD_TOKEN
          value: "VAR:DASHBOARD_TOKEN"
        - name: APP_NO_MAIL
          value: "VAR:NO_MAIL"
        - name: CORS_ALLOW_ORIGIN
          value: "^https?://VAR:DOMAIN(:[0-9]+)?$"
        volumeMounts:
        - mountPath: /etc/letsencrypt
          name: letsencrypt
        - mountPath: /project
          name: project
        - mountPath: /project/public/uploads
          name: uploads
        - mountPath: /project/var
          name: symfony-cache